spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect

#spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url= jdbc:postgresql://localhost:5432/testdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.show-sql=true
spring.session.store-type=none

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

#<https>

#port for https
#server.port=443

#port for http
server.port=8080

## HTTPS - SSL SHOULD BE IMPLEMENTED IN ANGULAR
# Tell Spring Security (if used) to require requests o  ver HTTPS uncomment for ssl
#security.require-ssl=true

# The format used for the keystore
#server.ssl.key-store-type=PKCS12

# The path to the keystore containing the certificate
#server.ssl.key-store=keystore.p12

# The password used to generate the certificate
#server.ssl.key-store-password=passwordforssl

# The alias mapped to the certificate
#server.ssl.key-alias=tomcat

#</https>

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC

security.oauth2.resource.filter-order = 3

# oauth2 properties
linkedin.oauth.clientSecret = secret
linkedin.oauth.clientId     = my-trusted-client

spring.jackson.default-property-inclusion=NON_NULL
